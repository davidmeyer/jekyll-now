BTW, this points to something I've been talking about lately as
well, namely, that one of the initial (the initial?) drivers
behind OF was that researchers [0] couldn't experiment with novel
control planes because equipment vendor's gear was too vertically
integrated, closed, ... The solution to this was OpenFlow (now I
could write my own control plane even if I couldn't get at your
network OS/protocol stack code). However, this reasoning has been
OBE'd as (a). Overylay technology is obviously as good as the
underlay technology except in those specialized environments that
need custom silicon (e.g., the core, high-touch edge, and the
like); if this weren't the case you wouldn't have things like AWS
(EC2, ...), {Open,Clould}Stack, and OVS itself. So the first
argument doesn't hold; just do your research on an
overlay. Done. And if you want to do research on the forwarding
plane, well lucky you: OVS.

More interesting, perhaps, is (b)., the existence of network
white boxes (e.g., pica8, sea cliff trail, etc), which is what
Cumulus is targeting. Now you can have an open source network OS
and network stack and this is exactly analogous to what happened
in compute (contrast OF/SDN, for which it has been suggested that
its architecture is what happened in compute, but clearly not
true); in particular you don't have to change the network
architecture to build an open source (or proprietary) network
OS/protocol stack that runs on these white boxes, and in
addition, they are incrementally deployable because they run the
same protocol suite. See GOOG, AMZN, and FB, all of whom do
this. Even BSN is (oddly) betting on white boxes now;
SwitchLight, which is really just Indigo; again, a OpenFlow
network OS that runs on white boxes (no real resident control
plane, consistent with the OF/SDN architecture). In any event the
reasoning behind all of this is very odd; what does OF even buy
you in this scenario?

So the original rationale behind OF/SDN, whether you bought that
rationale or not, no longer exists.  The remaining argument(s) in
favor of OF/SDN are that OF/SDN is a disruptive innovation that
will change the way we do networking (separation of control and
data planes, centralized control; this is obviously not true)
and/or that OF/SDN is a effective general purpose "network
programming" API, also obviously not true. So what's left? Well,
there are instances in which you would like to program ACLs on
the edge of your network or put up soft-PVCs (if you understand
how all of the TCAMs handle priority or you can get your
controller to share state in some rational way with existing
(distributed) control planes).  Well, all of that and the ONF
marketing machine.

If you deconstruct all of the OF/SDN hype just a little bit this
is what you wind up (BTW, these are pretty readily apparent
observations, not too much reasoning required). In any event
interesting times.

--dmm

[0] read: Nick, Scott, and their students which included among
others Martin, David (Erickson), Brandon Heller, Peyman, kind of
a who's who in the OF/SDN world 

